<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.team.mapper.UserMapper">

	<resultMap type="cn.team.bean.User" id="UserMap">
		<id column="id" property="id"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="status" property="status"/>
		<collection property="roles" ofType="cn.team.bean.Role">
			<id column="role_id" property="id"/>
			<result column="role_name" property="name"/>
			<result column="nameZh" property="nameZh"/>
		</collection>
		<collection property="depts" ofType="cn.team.bean.Dept">
			<id column="dept_id" property="id"/>
			<result column="dept_name" property="name"/>
		</collection>
	</resultMap>

	<select id="findUserByUsername" resultMap="UserMap">
		select users.*,role.id as role_id,role.name as role_name,role.nameZh,dept.id as dept_id,dept.name as dept_name from users,user_role,role,dept,dept_role
		where
			users.id = user_role.user_id and
			role.id = user_role.role_id and
			role.id = dept_role.role_id and
			dept.id = dept_role.dept_id and
			users.username = #{username}
	</select>
	<insert id="addUser" parameterType="cn.team.bean.User">
		insert into users(username,password)
		value(#{user.username},#{user.password})
		</insert>

	<select id="findUserList" resultMap="UserMap">
		select users.id,users.username,users.password, users.`status`,role.id as role_id,role.name as role_name,role.nameZh,dept.id as dept_id,dept.name as dept_name from users,user_role,role,dept,dept_role
		where users.id=user_role.user_id and user_role.role_id=role.id
		  and user_role.role_id = dept_role.role_id
		  and dept_role.dept_id = dept.id
	</select>

	
	<select id="findUserByPage" resultMap="UserMap">
		select * from users
		
        <if test="start!=null and size!=null">
            ORDER BY users.id limit #{start},#{size}
        </if>
        
	</select>
	
	<select id="getCountByUsername" resultType="Long">
        SELECT count(*) FROM users 
        <!-- WHERE
        <if test="username!=null and username!=''">
             users.username LIKE '%${username}%'concat('%',#{username},'%')
        </if> -->

    </select>

	<select id="findUserIdByUsername" resultType="long" parameterType="string">
		select id from users where username = #{username}
	</select>

	<select id="getEmployeeByPageShort" resultMap="UserMap">
		select * from users
		ORDER BY users.id limit #{start},#{size}
    </select>
	
	<select id="findUserById" parameterType="int" resultType="cn.team.bean.User">
		select * from users where id=#{id}
	</select>
<!-- 	<select id="findUserByName" parameterType="String" resultType="cn.team.beans.User">
		select * from users where username LIKE '%${username}%'
	</select> -->
	<update id="updateUser">
		update users
		  <set>
              <if test="user.username!=null and user.username != ''">
                  username = #{user.username}
              </if>
              <if test="user.password =null and user.password != ''">
                  AND password = #{user.password}
              </if>
              where users.id = #{user.id,jdbcType=BIGINT}
          </set>
	</update>
	
	<delete id="deleteUserByUId">
		delete from users where users.id=#{id}
	</delete>
		
	 <insert id="addRolesForUser">
        INSERT INTO user_role(user_id,role_id) VALUES
        <foreach collection="rids" separator="," item="rid">
            (#{uId},#{rid})
        </foreach>
    </insert>
    
    <delete id="deleteRoleByUId" parameterType="Long">
        DELETE FROM user_role where user_id=#{UId}
    </delete>
    
    <!-- <update id="updateRoleForUser">
    	update user_role set role_id = #{rId} where user_role.id=#{urId}
		
    </update> -->
    
</mapper>